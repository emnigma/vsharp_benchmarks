{
    "dll_dir": "/Users/emax/Data/python/vsharp_searcher_bench/prebuilt/unity",
    "dlls": {
        "Unity.dll": {
            "ShaderStringBuilder": [
                "AppendLines",
                "Concat",
                "Dispose"
            ],
            "SlotValueHelper": [
                "AreCompatible"
            ],
            "HlslTokenizer": [
                "GetOperatorToken",
                "ParseNumericLiteral",
                "Init"
            ],
            "PartialDerivUtilWriter": [
                "MakeBinaryFunc",
                "MakeSingleFunc",
                "MakeImplicitCast",
                "GenerateDefinitionsAndFuncs"
            ],
            "HlslParser": [
                "ParseStruct",
                "ParseStatement"
            ],
            "HlslGenerator": [
                "MarkApdNodesAndVariablesIsLegal",
                "CalculateApdDependenciesRecurse",
                "GenerateNodeExpression"
            ],
            "Collections.Bitwise": [
                "FindUlong",
                "FindUpto6bits"
            ],
            "Collections.ConcurrentMask": [
                "AtomicAnd",
                "TryAllocate<T>(ref T t, out int offset, int begin, int end, int bits) where T : IIndexable<long>"
            ],
            "xxHash3": [
                "Hash64Internal"
            ],
            "ObserverManager": [
                "NotifyObserversx"
            ],
            "PropertyBag": [
                "Accept(ITypeVisitor visitor)",
                "AcceptWithSpecializedVisitor<TContainer>(IPropertyBag<TContainer> properties, IPropertyBagVisitor visitor, ref TContainer container)",
                "Register<TContainer>(PropertyBag<TContainer> propertyBag)"
            ],
            "UnsafeBitArray": [
                "Copy(int dstPos, ref UnsafeBitArray srcBitArray, int srcPos, int numBits)",
                "SetBits(int pos, ulong value, int numBits = 1)",
                "Resize(int numBits, NativeArrayOptions options = NativeArrayOptions.UninitializedMemory)",
                "SetBits(int pos, bool value, int numBits)"
            ],
            "UnsafeList": [
                "InsertRangeWithBeginEnd"
            ],
            "UnsafeHashMap": [
                "TryRemove",
                "ResizeExact"
            ],
            "PropertyContainer": [
                "Accept<TContainer>(IPropertyBagVisitor visitor, TContainer container, VisitParameters parameters = default)",
                "TryAccept<TContainer>(IPropertyBagVisitor visitor, ref TContainer container, out VisitReturnCode returnCode, VisitParameters parameters = default)"
            ]
        }
    }
}